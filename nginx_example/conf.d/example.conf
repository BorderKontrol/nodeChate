server {
    server_tokens off;

    # Only listen for https connections
    listen 443 ssl http2;
    #listen [::]:443 ssl http2; # uncomment for ipv6
    server_name example.org;

    ssl_certificate /your/certificate/here;
    ssl_certificate_key /your/private/key/here;

    ssl_dhparam /etc/nginx/dhparams.pem; # make sure to generate it, your favorite search engine is your friend

    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:1m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_protocols  TLSv1.2 TLSv1.3;
    # Only the best ciphersuites, don't try with IE6
    ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_prefer_server_ciphers on;

    include defaults/default.conf;

    add_header Content-Security-Policy "default-src 'none'; script-src 'self'; style-src 'self'; img-src 'self'; connect-src 'self'";
    
    root /usr/share/webapps/nodeChate/build; # adjust to your own directory structure

    location = /login {
        proxy_pass http://localhost:6553;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location = /register {
        proxy_pass http://localhost:6553;
        proxy_set_header X-Forwarded-For $remote_addr;
    }

    location ^~ /socket.io/ {
        proxy_pass http://localhost:6553;
        proxy_set_header X-Forwarded-For $remote_addr;
    }
}
